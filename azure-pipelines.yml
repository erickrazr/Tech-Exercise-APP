

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Docker
  displayName: Build & Push Docker image to AWS ECR
  jobs:
  - job: Build_and_Push
    displayName: Build & Push Docker image
    steps:
      
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: 'app/Dockerfile'
        buildContext: 'app/'
        repository: guestbooknode
        tags: latest
    - task: ECRPushImage@1
      inputs:
        awsCredentials: 'AWS-Cloudbrick'
        regionName: 'us-east-2'
        imageSource: 'imagename'
        sourceImageName: 'guestbooknode'
        repositoryName: 'guestbooknode'
        pushTag: latest
      

- stage: EKS
  displayName: Provisioning EKS Cluster
  jobs:
  - job: Terraform_Cluster_Provisioning
    displayName: Terraform init - EKS
    steps: 
      - task: TerraformTaskV4@4
        displayName: Terraform init - EKS
        inputs:
          provider: 'aws'
          command: 'init'
          workingDirectory: 'infra'
          backendServiceAWS: 'AWS Terraform'
          backendAWSBucketName: 'te-env-lab'
          backendAWSKey: 'state/terraform.tfstate'
          commandOptions: '-reconfigure'


      
      - task: TerraformTaskV4@4
        displayName: Terraform Plan - EKS
        inputs:
          provider: 'aws'
          command: 'plan'
          workingDirectory: 'infra'
          environmentServiceNameAWS: 'AWS Terraform'

      - task: TerraformTaskV4@4
        inputs:
          provider: 'aws'
          command: 'apply'
          commandOptions: 'state/terraform.tfstate'
          environmentServiceNameAWS: 'AWS Terraform'

